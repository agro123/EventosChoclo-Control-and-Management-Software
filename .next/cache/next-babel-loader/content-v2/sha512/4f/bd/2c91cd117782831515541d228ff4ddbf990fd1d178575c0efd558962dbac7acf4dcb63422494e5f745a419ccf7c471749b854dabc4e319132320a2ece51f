{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\crist\\\\Documents\\\\ds2\\\\EventosChoclo-Control-and-Management-Software\\\\components\\\\listarEventos\\\\deleteButton.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { Popconfirm, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport propTypes from 'prop-types';\nimport { CardContext } from '../../context/cardContext';\nimport { deleteEvento } from '../database/eventosCrud';\nexport default function DeleteButton(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useContext = useContext(CardContext),\n      generarEventos = _useContext.generarEventos;\n\n  var showPopconfirm = function showPopconfirm() {\n    //\n    setVisible(true);\n  };\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var config, resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                key: 'deleteEvent',\n                style: {\n                  marginTop: '15vh'\n                }\n              };\n              message.loading(_objectSpread({\n                content: 'Eliminando evento...'\n              }, config)); //peticion a servidor para eleminiar un elemento\n\n              _context.prev = 2;\n              _context.next = 5;\n              return deleteEvento(id);\n\n            case 5:\n              resp = _context.sent;\n\n              if (resp) {\n                console.log('El evento fue eliminado');\n                setVisible(false);\n                generarEventos();\n                message.success(_objectSpread({\n                  content: 'Evento eliminado',\n                  duration: 2\n                }, config));\n              }\n\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n              setVisible(false);\n              message.error(_objectSpread({\n                content: 'El Evento no pudo ser eliminado',\n                duration: 2\n              }, config));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function handleOk() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Esta acci\\xF3n es irreversible\",\n      visible: visible,\n      onConfirm: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        className: \"deleteButton\",\n        onClick: showPopconfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeleteButton, \"OzsmxgkdMaWUhKLjsKRW4jVuNaM=\");\n\n_c = DeleteButton;\nDeleteButton.propTypes = {\n  id: propTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteButton\");","map":{"version":3,"sources":["C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/components/listarEventos/deleteButton.js"],"names":["React","useState","useContext","Popconfirm","message","DeleteOutlined","propTypes","CardContext","deleteEvento","DeleteButton","id","visible","setVisible","generarEventos","showPopconfirm","handleOk","config","key","style","marginTop","loading","content","resp","console","log","success","duration","error","handleCancel","number","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,MAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,eAAe,SAASC,YAAT,OAA8B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACXT,QAAQ,CAAC,KAAD,CADG;AAAA,MAClCU,OADkC;AAAA,MACzBC,UADyB;;AAAA,oBAGdV,UAAU,CAACK,WAAD,CAHI;AAAA,MAGjCM,cAHiC,eAGjCA,cAHiC;;AAKzC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAC;AAC1BF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,MAAMG,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,MADO,GACE;AAAEC,gBAAAA,GAAG,EAAE,aAAP;AAAsBC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAA7B,eADF;AAEbf,cAAAA,OAAO,CAACgB,OAAR;AAAkBC,gBAAAA,OAAO,EAAE;AAA3B,iBAAsDL,MAAtD,GAFa,CAGb;;AAHa;AAAA;AAAA,qBAKUR,YAAY,CAACE,EAAD,CALtB;;AAAA;AAKHY,cAAAA,IALG;;AAMT,kBAAIA,IAAJ,EAAU;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAZ,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,gBAAAA,cAAc;AACdT,gBAAAA,OAAO,CAACqB,OAAR;AAAkBJ,kBAAAA,OAAO,EAAE,kBAA3B;AAA+CK,kBAAAA,QAAQ,EAAE;AAAzD,mBAA+DV,MAA/D;AACH;;AAXQ;AAAA;;AAAA;AAAA;AAAA;AAaTO,cAAAA,OAAO,CAACC,GAAR;AACAZ,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,cAAAA,OAAO,CAACuB,KAAR;AAAgBN,gBAAAA,OAAO,EAAE,iCAAzB;AAA4DK,gBAAAA,QAAQ,EAAE;AAAtE,iBAA4EV,MAA5E;;AAfS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARD,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAmBA,MAAMa,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,KAAK,EAAC,gCADV;AAEI,MAAA,OAAO,EAAED,OAFb;AAGI,MAAA,SAAS,EAAEI,QAHf;AAII,MAAA,QAAQ,EAAEa,YAJd;AAAA,6BAMI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,cAA1B;AAAyC,QAAA,OAAO,EAAEd;AAAlD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GA7CuBL,Y;;KAAAA,Y;AA8CxBA,YAAY,CAACH,SAAb,GAAyB;AACrBI,EAAAA,EAAE,EAAEJ,SAAS,CAACuB,MAAV,CAAiBC;AADA,CAAzB","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Popconfirm, message } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport propTypes from 'prop-types';\r\nimport { CardContext } from '../../context/cardContext';\r\nimport { deleteEvento } from '../database/eventosCrud'\r\n\r\nexport default function DeleteButton({ id }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const { generarEventos } = useContext(CardContext);\r\n\r\n    const showPopconfirm = () => {//\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        const config = { key: 'deleteEvent', style: { marginTop: '15vh' } }\r\n        message.loading({ content: 'Eliminando evento...', ...config });\r\n        //peticion a servidor para eleminiar un elemento\r\n        try {\r\n            const resp = await deleteEvento(id);\r\n            if (resp) {\r\n                console.log('El evento fue eliminado');\r\n                setVisible(false);\r\n                generarEventos();\r\n                message.success({ content: 'Evento eliminado', duration: 2, ...config });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setVisible(false);\r\n            message.error({ content: 'El Evento no pudo ser eliminado', duration: 2, ...config });\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Popconfirm\r\n                title=\"Esta acciÃ³n es irreversible\"\r\n                visible={visible}\r\n                onConfirm={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <DeleteOutlined className=\"deleteButton\" onClick={showPopconfirm} />\r\n            </Popconfirm>\r\n        </>\r\n    )\r\n}\r\nDeleteButton.propTypes = {\r\n    id: propTypes.number.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}