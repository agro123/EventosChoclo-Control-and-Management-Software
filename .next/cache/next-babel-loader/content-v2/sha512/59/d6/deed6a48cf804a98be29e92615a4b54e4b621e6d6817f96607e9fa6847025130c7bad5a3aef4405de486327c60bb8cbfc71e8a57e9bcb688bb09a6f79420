{"ast":null,"code":"import data from './data.json';\nconst {\n  eventos\n} = data;\nexport const getEventos = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (eventos) {\n        resolve(eventos);\n      } else {\n        reject('No hay eventos');\n      }\n    }, 1000);\n  });\n};\nexport const deleteEvento = id => {\n  return new Promise((resolve, reject) => {\n    let found = false;\n    setTimeout(() => {\n      eventos.map((v, i) => {\n        if (v.id === id) {\n          found = true;\n          eventos.splice(i, 1);\n        }\n      });\n      found ? resolve(true) : reject(false);\n    }, 1500);\n  });\n};\nexport const getEventoById = id => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const evento = eventos.find(evento => evento.id === id);\n      evento ? resolve(evento) : reject('Not found');\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/components/database/eventosCrud.js"],"names":["data","eventos","getEventos","Promise","resolve","reject","setTimeout","deleteEvento","id","found","map","v","i","splice","getEventoById","evento","find"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,IAApB;AAEA,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,UAAU,CAAC,MAAM;AACb,UAAIL,OAAJ,EAAa;AACTG,QAAAA,OAAO,CAACH,OAAD,CAAP;AACH,OAFD,MAEO;AACHI,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACH;AACJ,KANS,EAMP,IANO,CAAV;AAOH,GARM,CAAP;AASH,CAVM;AAYP,OAAO,MAAME,YAAY,GAAGC,EAAE,IAAI;AAC9B,SAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAII,KAAK,GAAG,KAAZ;AACAH,IAAAA,UAAU,CAAC,MAAM;AACbL,MAAAA,OAAO,CAACS,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,YAAID,CAAC,CAACH,EAAF,KAASA,EAAb,EAAiB;AACbC,UAAAA,KAAK,GAAG,IAAR;AACAR,UAAAA,OAAO,CAACY,MAAR,CAAeD,CAAf,EAAkB,CAAlB;AACH;AACJ,OALD;AAMAH,MAAAA,KAAK,GAACL,OAAO,CAAC,IAAD,CAAR,GAAgBC,MAAM,CAAC,KAAD,CAA3B;AACH,KARS,EAQP,IARO,CAAV;AASH,GAXM,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMS,aAAa,GAAGN,EAAE,IAAI;AAC/B,SAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAMS,MAAM,GAAGd,OAAO,CAACe,IAAR,CAAcD,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcA,EAAtC,CAAf;AACAO,MAAAA,MAAM,GAAEX,OAAO,CAACW,MAAD,CAAT,GAAoBV,MAAM,CAAC,WAAD,CAAhC;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GALM,CAAP;AAMH,CAPM","sourcesContent":["import data from './data.json';\r\nconst { eventos } = data;\r\n\r\nexport const getEventos = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (eventos) {\r\n                resolve(eventos)\r\n            } else {\r\n                reject('No hay eventos')\r\n            }\r\n        }, 1000)\r\n    })\r\n}\r\n\r\nexport const deleteEvento = id => {\r\n    return new Promise((resolve, reject) => {\r\n        let found = false;\r\n        setTimeout(() => {\r\n            eventos.map((v, i) => {\r\n                if (v.id === id) {\r\n                    found = true;\r\n                    eventos.splice(i, 1);\r\n                }\r\n            })\r\n            found?resolve(true): reject(false);\r\n        }, 1500)\r\n    })\r\n}\r\n\r\nexport const getEventoById = id => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const evento = eventos.find( evento => evento.id === id );\r\n            evento? resolve(evento) : reject('Not found');\r\n        }, 1000)\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}