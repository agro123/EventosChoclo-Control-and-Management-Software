{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst fechaActual = new Date();\nlet fechaMas1 = new Date();\nfechaMas1.setHours(fechaMas1.getHours() + 1);\n\nconst agregar0 = hora => {\n  let hora0;\n\n  if (String(hora).length == 1) {\n    hora0 = \"0\" + hora;\n  } else {\n    hora0 = hora;\n  }\n\n  return hora0;\n};\n\nconst horaActual = tipo => {\n  const horaI = `${agregar0(fechaActual.getHours())}:${agregar0(fechaActual.getMinutes())}:${agregar0(fechaActual.getSeconds())}`;\n  const horaF = `${agregar0(fechaMas1.getHours())}:${agregar0(fechaMas1.getMinutes())}:${agregar0(fechaMas1.getSeconds())}`;\n  return tipo ? horaI : horaF;\n};\n\nconst semanaAc = num => {\n  let dia = num;\n\n  if (dia + 1 > 7) {\n    dia = 0;\n  }\n\n  switch (dia) {\n    case 0:\n      return \"Domingo\";\n\n    case 1:\n      return \"Lunes\";\n\n    case 2:\n      return \"Martes\";\n\n    case 3:\n      return \"Miercoles\";\n\n    case 4:\n      return \"Jueves\";\n\n    case 5:\n      return \"Viernes\";\n\n    case 6:\n      return \"Sabado\";\n  }\n};\n\nconst mesAc = num => {\n  let mes = num;\n\n  if (mes + 1 > 12) {\n    mes = 1;\n  }\n\n  switch (mes) {\n    case 0:\n      return \"Enero\";\n\n    case 1:\n      return \"Febrero\";\n\n    case 2:\n      return \"Marzo\";\n\n    case 3:\n      return \"Abril\";\n\n    case 4:\n      return \"Mayo\";\n\n    case 5:\n      return \"Junio\";\n\n    case 6:\n      return \"Julio\";\n\n    case 7:\n      return \"Agosto\";\n\n    case 8:\n      return \"Septiembre\";\n\n    case 9:\n      return \"Octubre\";\n\n    case 10:\n      return \"Noviembre\";\n\n    case 11:\n      return \"Diciembre\";\n  }\n};\n\nconst inicio = {\n  semana: semanaAc(fechaActual.getDay()),\n  dia: fechaActual.getDate(),\n  mes: mesAc(fechaActual.getMonth()),\n  año: fechaActual.getFullYear(),\n  hora: horaActual(true)\n};\nconst cierre = {\n  semana: semanaAc(fechaMas1.getDay()),\n  dia: fechaMas1.getDate(),\n  mes: mesAc(fechaMas1.getMonth()),\n  año: fechaMas1.getFullYear(),\n  hora: horaActual(false)\n};\n\nconst convertirSemana = semana => {\n  switch (semana) {\n    case \"Mon\":\n      return \"Lunes\";\n\n    case \"Tue\":\n      return \"Martes\";\n\n    case \"Wed\":\n      return \"Miercoles\";\n\n    case \"Thu\":\n      return \"Jueves\";\n\n    case \"Fri\":\n      return \"Viernes\";\n\n    case \"Sat\":\n      return \"Sabado\";\n\n    case \"Sun\":\n      return \"Domingo\";\n  }\n};\n\nconst convertirMes = mes => {\n  switch (mes) {\n    case \"Jan\":\n      return \"Enero\";\n\n    case \"Feb\":\n      return \"Febrero\";\n\n    case \"Mar\":\n      return \"Marzo\";\n\n    case \"Apr\":\n      return \"Abril\";\n\n    case \"May\":\n      return \"Mayo\";\n\n    case \"Jun\":\n      return \"Junio\";\n\n    case \"Jul\":\n      return \"Julio\";\n\n    case \"Aug\":\n      return \"Agosto\";\n\n    case \"Sep\":\n      return \"Septiembre\";\n\n    case \"Oct\":\n      return \"Octubre\";\n\n    case \"Nov\":\n      return \"Noviembre\";\n\n    case \"Dec\":\n      return \"Diciembre\";\n  }\n};\n\nconst convertirMesNum = mes => {\n  switch (mes) {\n    case \"Enero\":\n      return 1;\n\n    case \"Febrero\":\n      return 2;\n\n    case \"Marzo\":\n      return 3;\n\n    case \"Abril\":\n      return 4;\n\n    case \"Mayo\":\n      return 5;\n\n    case \"Junio\":\n      return 6;\n\n    case \"Julio\":\n      return 7;\n\n    case \"Agosto\":\n      return 8;\n\n    case \"Septiembre\":\n      return 9;\n\n    case \"Octubre\":\n      return 10;\n\n    case \"Noviembre\":\n      return 11;\n\n    case \"Diciembre\":\n      return 12;\n  }\n};\n\nconst convertDate = date => {\n  const convertDate = String(_objectSpread({}, date)._d).split(\" \");\n  const dates = {\n    semana: convertirSemana(convertDate[0]),\n    mes: convertirMes(convertDate[1]),\n    dia: convertDate[2],\n    año: convertDate[3],\n    hora: convertDate[4]\n  };\n  return dates;\n};\n\nconst convertirImagen = file => {\n  const formdata = new FormData();\n  formdata.append(\"image\", file);\n  return formdata;\n};\n\nconst validarFecha = (fechaI, fechaF) => {\n  if (parseInt(fechaF.año) > parseInt(fechaI.año)) {\n    return true;\n  } else if (convertirMesNum(fechaF.mes) > convertirMesNum(fechaI.mes)) {\n    return true;\n  } else if (parseInt(fechaF.dia) > parseInt(fechaI.dia)) {\n    return true;\n  } else if (parseInt(fechaF.hora.substr(0, 2)) > parseInt(fechaI.hora.substr(0, 2))) {\n    return true;\n  } else if (parseInt(fechaF.hora.substr(3, 2)) > parseInt(fechaI.hora.substr(3, 2))) {\n    return true;\n  } else if (parseInt(fechaF.hora.substr(6, 2)) > parseInt(fechaI.hora.substr(6, 2))) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport { agregar0, semanaAc, convertirMes, cierre, inicio, convertDate, convertirImagen, fechaActual, fechaMas1, validarFecha };","map":{"version":3,"sources":["C:/Users/crist/Documents/ds2/EventosChoclo-Control-and-Management-Software/components/Dates/manejoFechas.js"],"names":["fechaActual","Date","fechaMas1","setHours","getHours","agregar0","hora","hora0","String","length","horaActual","tipo","horaI","getMinutes","getSeconds","horaF","semanaAc","num","dia","mesAc","mes","inicio","semana","getDay","getDate","getMonth","año","getFullYear","cierre","convertirSemana","convertirMes","convertirMesNum","convertDate","date","_d","split","dates","convertirImagen","file","formdata","FormData","append","validarFecha","fechaI","fechaF","parseInt","substr"],"mappings":"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","sourcesContent":["const fechaActual = new Date();\r\n\r\nlet fechaMas1 = new Date();\r\n\r\nfechaMas1.setHours(fechaMas1.getHours() + 1);\r\n\r\nconst agregar0 = (hora) => {\r\n  let hora0;\r\n  if (String(hora).length == 1) {\r\n    hora0 = \"0\" + hora;\r\n  } else {\r\n    hora0 = hora;\r\n  }\r\n  return hora0;\r\n};\r\nconst horaActual = (tipo) => {\r\n  const horaI = `${agregar0(fechaActual.getHours())}:${agregar0(\r\n    fechaActual.getMinutes()\r\n  )}:${agregar0(fechaActual.getSeconds())}`;\r\n  const horaF = `${agregar0(fechaMas1.getHours())}:${agregar0(\r\n    fechaMas1.getMinutes()\r\n  )}:${agregar0(fechaMas1.getSeconds())}`;\r\n  return tipo ? horaI : horaF;\r\n};\r\n\r\nconst semanaAc = (num) => {\r\n  let dia = num;\r\n\r\n  if (dia + 1 > 7) {\r\n    dia = 0;\r\n  }\r\n  switch (dia) {\r\n    case 0:\r\n      return \"Domingo\";\r\n    case 1:\r\n      return \"Lunes\";\r\n    case 2:\r\n      return \"Martes\";\r\n    case 3:\r\n      return \"Miercoles\";\r\n    case 4:\r\n      return \"Jueves\";\r\n    case 5:\r\n      return \"Viernes\";\r\n    case 6:\r\n      return \"Sabado\";\r\n  }\r\n};\r\n\r\nconst mesAc = (num) => {\r\n  let mes = num;\r\n  if (mes + 1 > 12) {\r\n    mes = 1;\r\n  }\r\n  switch (mes) {\r\n    case 0:\r\n      return \"Enero\";\r\n    case 1:\r\n      return \"Febrero\";\r\n    case 2:\r\n      return \"Marzo\";\r\n    case 3:\r\n      return \"Abril\";\r\n    case 4:\r\n      return \"Mayo\";\r\n    case 5:\r\n      return \"Junio\";\r\n    case 6:\r\n      return \"Julio\";\r\n    case 7:\r\n      return \"Agosto\";\r\n    case 8:\r\n      return \"Septiembre\";\r\n    case 9:\r\n      return \"Octubre\";\r\n    case 10:\r\n      return \"Noviembre\";\r\n    case 11:\r\n      return \"Diciembre\";\r\n  }\r\n};\r\n\r\nconst inicio = {\r\n  semana: semanaAc(fechaActual.getDay()),\r\n  dia: fechaActual.getDate(),\r\n  mes: mesAc(fechaActual.getMonth()),\r\n  año: fechaActual.getFullYear(),\r\n  hora: horaActual(true),\r\n};\r\nconst cierre = {\r\n  semana: semanaAc(fechaMas1.getDay()),\r\n  dia: fechaMas1.getDate(),\r\n  mes: mesAc(fechaMas1.getMonth()),\r\n  año: fechaMas1.getFullYear(),\r\n  hora: horaActual(false),\r\n};\r\n\r\nconst convertirSemana = (semana) => {\r\n  switch (semana) {\r\n    case \"Mon\":\r\n      return \"Lunes\";\r\n    case \"Tue\":\r\n      return \"Martes\";\r\n    case \"Wed\":\r\n      return \"Miercoles\";\r\n    case \"Thu\":\r\n      return \"Jueves\";\r\n    case \"Fri\":\r\n      return \"Viernes\";\r\n    case \"Sat\":\r\n      return \"Sabado\";\r\n    case \"Sun\":\r\n      return \"Domingo\";\r\n  }\r\n};\r\n\r\nconst convertirMes = (mes) => {\r\n  switch (mes) {\r\n    case \"Jan\":\r\n      return \"Enero\";\r\n    case \"Feb\":\r\n      return \"Febrero\";\r\n    case \"Mar\":\r\n      return \"Marzo\";\r\n    case \"Apr\":\r\n      return \"Abril\";\r\n    case \"May\":\r\n      return \"Mayo\";\r\n    case \"Jun\":\r\n      return \"Junio\";\r\n    case \"Jul\":\r\n      return \"Julio\";\r\n    case \"Aug\":\r\n      return \"Agosto\";\r\n    case \"Sep\":\r\n      return \"Septiembre\";\r\n    case \"Oct\":\r\n      return \"Octubre\";\r\n    case \"Nov\":\r\n      return \"Noviembre\";\r\n    case \"Dec\":\r\n      return \"Diciembre\";\r\n  }\r\n};\r\n\r\nconst convertirMesNum = (mes) => {\r\n  switch (mes) {\r\n    case \"Enero\":\r\n      return 1;\r\n    case \"Febrero\":\r\n      return 2;\r\n    case \"Marzo\":\r\n      return 3;\r\n    case \"Abril\":\r\n      return 4;\r\n    case \"Mayo\":\r\n      return 5;\r\n    case \"Junio\":\r\n      return 6;\r\n    case \"Julio\":\r\n      return 7;\r\n    case \"Agosto\":\r\n      return 8;\r\n    case \"Septiembre\":\r\n      return 9;\r\n    case \"Octubre\":\r\n      return 10;\r\n    case \"Noviembre\":\r\n      return 11;\r\n    case \"Diciembre\":\r\n      return 12;\r\n  }\r\n};\r\n\r\nconst convertDate = (date) => {\r\n  const convertDate = String({ ...date }._d).split(\" \");\r\n  const dates = {\r\n    semana: convertirSemana(convertDate[0]),\r\n    mes: convertirMes(convertDate[1]),\r\n    dia: convertDate[2],\r\n    año: convertDate[3],\r\n    hora: convertDate[4],\r\n  };\r\n  return dates;\r\n};\r\n\r\nconst convertirImagen = (file) => {\r\n  const formdata = new FormData();\r\n  formdata.append(\"image\", file);\r\n  return formdata;\r\n};\r\n\r\nconst validarFecha = (fechaI, fechaF) => {\r\n  if (parseInt(fechaF.año) > parseInt(fechaI.año)) {\r\n    return true;\r\n  } else if (convertirMesNum(fechaF.mes) > convertirMesNum(fechaI.mes)) {\r\n    return true;\r\n  } else if (parseInt(fechaF.dia) > parseInt(fechaI.dia)) {\r\n    return true;\r\n  } else if (\r\n    parseInt(fechaF.hora.substr(0, 2)) > parseInt(fechaI.hora.substr(0, 2))\r\n  ) {\r\n    return true;\r\n  } else if (\r\n    parseInt(fechaF.hora.substr(3, 2)) > parseInt(fechaI.hora.substr(3, 2))\r\n  ) {\r\n    return true;\r\n  } else if (\r\n    parseInt(fechaF.hora.substr(6, 2)) > parseInt(fechaI.hora.substr(6, 2))\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport {\r\n  agregar0,\r\n  semanaAc,\r\n  convertirMes,\r\n  cierre,\r\n  inicio,\r\n  convertDate,\r\n  convertirImagen,\r\n  fechaActual,\r\n  fechaMas1,\r\n  validarFecha,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}